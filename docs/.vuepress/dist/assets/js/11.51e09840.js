(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{286:function(a,s,e){"use strict";e.r(s);var t=e(14),n=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"静态包含"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态包含"}},[a._v("#")]),a._v(" 静态包含")]),a._v(" "),s("p",[a._v("格式:（JSP 指令）\n"),s("code",[a._v('<%@include fil="要包含的页面路径" />')])]),a._v(" "),s("div",{staticClass:"language-jsp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<div>\n    <%@include file="header.jsp"%>\n    <h2>静态包含Body</h2>\n    <%@include file="foot.jsp"%>\n</div>\n')])])]),s("p",[a._v("静态包含就是将内容进行了直接的替换，就好比程序中定义的变量一样，是在servlet引擎转译时，就把此文件内容包含了进去(两个文件的源代码整合到一起，全部放到_ispSenvice方法中，所以只生成了一个servlet,所以"),s("strong",[a._v("两个页面不能有同名的变量")]),a._v("。")]),a._v(" "),s("p",[a._v("运行效率高一点点。耦合性较高，不够灵活。")]),a._v(" "),s("h2",{attrs:{id:"动态包含"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态包含"}},[a._v("#")]),a._v(" 动态包含")]),a._v(" "),s("p",[a._v("格式:（JSP 动作元素）")]),a._v(" "),s("p",[a._v("​        "),s("code",[a._v('<jsp:include page="要包含的页面路倒 ></jsp:include>')]),a._v("\n特点:\n​        1．动态包含相当于方法的调用\n​        2．动态包含会生成多个源码文件\n​        3．可以定义同名变量\n​        4．效率高，耦合度低\n注意：\n​            当动态包含不需要传递参数时，include双标签之间不要有任何内容，包括换行和空格\n使用动态包含传递参数:")]),a._v(" "),s("div",{staticClass:"language-JSP extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<jsp:include page="要包含的页面路径">\n<jsp: param name="参数名" value="参数值"/></jsp:include>\n')])])]),s("p",[a._v("注:\nname属性不支持表达式，value属性支持表示\n获取参数:")]),a._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParameter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//通过指定参数名获取参数值")]),a._v("\n")])])]),s("p",[a._v("例：")]),a._v(" "),s("div",{staticClass:"language-jsp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('// body.jsp\n<div>\n    <%\n    \tString str="hello";\n    %>\n    <jsp:include page="header.jsp"/>\n    \t<h2>动态包含Body</h2>\n    <jsp:include page="foot.jsp">\n        <jsp:param name="msg" value="<%=str%>"/>\n    </jsp:include>\n</div>\n')])])]),s("div",{staticClass:"language-jsp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('// foot.jsp\n<h1>底部</h1>\n<%\n    String msg=request.getParameter("msg");\n%>\n<p><%=msg%></p>\n')])])])])}),[],!1,null,null,null);s.default=n.exports}}]);